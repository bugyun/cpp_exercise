//
// Created by 若云 on 2018/8/13.
//
/**
 * c 语言中有宏函数的概念。宏函数的特点是内嵌到调用代码中去,
 * 避免了 函数调用 的开销。但是由于宏函数的处理发生在预处理阶段,缺失了语法检测 和有可能带来的语 意差错。
 */
#include <iostream>

using namespace std;

#define MAX(a, b)  ((a)>(b)?(a):(b));

/**
* 优点: 内嵌代码,辟免压栈与出栈的开销
  缺点: 代码替换,易使⽣生成代码体积变⼤大,易产⽣生逻辑错误。
  本质:以牺牲代码段空间为代价,提高程序的运行时间的效率。
  适用场景:函数体很“小”,且被“频繁”调用。
*/
inline void printAB(int a, int b) {
    cout << "a " << a << " b " << b << endl;
}

int main() {
    int a = MAX(10, 11);
    cout << "a " << a << endl;//a 11
    printAB(9, 21);//a 9 b 21
    return 0;
}

/**
 * 特点:
 1)内联函数声明时inline关键字必须和函数定义结合在一起，否则编译器会直 接忽略内联请求。
 2)C++编译器直接将函数体插入在函数调用的地方 。
 3)内联函数没有普通函数调用时的额外开销(压栈，跳转，返回)。
 4)内联函数是一种特殊的函数，具有普通函数的特征(参数检查，返回类型 等)。
 5) 内联函数由 编译器处理，直接将编译后的函数体插入调用的地方,宏代码片段 由预处理器处理， 进行简单的文本替换，没有任何编译过程。
 */


